//
//  QuestListViewController.swift
//  LociTravel
//
//  Created by suji chae on 8/5/25.
//

import UIKit
import CoreLocation

class QuestListViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
    
    private let tableView = UITableView()
    
    private var quests: [Quest]!
 
    // ‚¨áÔ∏è‚¨áÔ∏è [Ï∂îÍ∞Ä] Ï†ÑÌôò Ï§ë Î†åÎçîÎßÅ Î∂ÄÌïòÎ•º Ï§ÑÏù¥Í∏∞ ÏúÑÌïú ÌîåÎûòÍ∑∏
       private var rasterizedForPop = false
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        print("BG loaded:", UIImage(named: "questlistviewbackground") != nil)
        
        quests = QuestModel.shared.getAllQuests()

        setupBackgroundImage()    // üîß Î∞∞Í≤Ω Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï Î©îÏÑúÎìú Ìò∏Ï∂ú
        setupTableView()
        navigationItem.hidesBackButton = true
        setupCustomBackButton()
        setupNavBarTitle() // üîß Ï∂îÍ∞Ä: ÌÉÄÏù¥ÌãÄ Ï§ëÏïô Í≥†Ï†ï
        
        // ‚ú® [Ï∂îÍ∞Ä/Ïù¥Îèô] ÎÑ§ÎπÑÎ∞î Ïô∏Ìòï ÏÑ§Ï†ïÏùÄ Ìïú Î≤àÎßå(Ïó¨Í∏∞ÏÑú) Ìï¥ÎëêÏÑ∏Ïöî.
            //    Îß§ pop ÎïåÎßàÎã§ appearanceÎ•º ÏÉàÎ°ú ÎßåÎìúÎäî ÎπÑÏö©ÏùÑ Ï§ÑÏó¨ Ï†ÑÌôòÏùÑ Î∂ÄÎìúÎüΩÍ≤å Ìï©ÎãàÎã§.
            let ap = UINavigationBarAppearance()
            ap.configureWithTransparentBackground()
            ap.titleTextAttributes = [
                .foregroundColor: UIColor.label,
                .font: UIFont.systemFont(ofSize: 20, weight: .bold)
            ]
            navigationController?.navigationBar.standardAppearance = ap
            navigationController?.navigationBar.scrollEdgeAppearance = ap
    }
    
    // üîß [Ï∂îÍ∞Ä] Ïù¥ ÌôîÎ©¥Ïù¥ ÎÇòÌÉÄÎÇ† Îïå ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Î∞îÎ•º Îã§Ïãú Î≥¥Ïù¥Í≤å ÎßåÎì≠ÎãàÎã§.
        override func viewWillAppear(_ animated: Bool) {
            super.viewWillAppear(animated)
             navigationController?.setNavigationBarHidden(false, animated: false) // ‚Üê ÌïµÏã¨
            // Ïä§ÏôÄÏù¥ÌîÑ-Îí§Î°ú Ï†úÏä§Ï≤ò ÏºúÎëêÍ∏∞(ÏûàÏúºÎ©¥ ÏûêÏó∞Ïä§Îü¨ÏõÄ)
               navigationController?.interactivePopGestureRecognizer?.delegate = nil
               navigationController?.interactivePopGestureRecognizer?.isEnabled = true
            
            // ‚ú® [Ï∂îÍ∞Ä] Ïù¥Ï†ÑÏóê ÏÑ†ÌÉùÎêú ÏÖÄÏùÑ ÏûêÏó∞Ïä§ÎüΩÍ≤å Ìï¥Ï†ú(Î≥µÍ∑Ä Ïãú ÍπîÎÅî)
                if let idx = tableView.indexPathForSelectedRow {
                    tableView.deselectRow(at: idx, animated: true)
                }
        }
    
    // ‚¨áÔ∏è‚¨áÔ∏è [Ï∂îÍ∞Ä] 'Îí§Î°úÍ∞ÄÍ∏∞ Ìåù' ÏßÅÏ†ÑÏóê ÌÖåÏù¥Î∏îÏùÑ ÎûòÏä§ÌÑ∞ÎùºÏù¥Ï¶à(ÌèâÎ©¥Ìôî)Ìï¥ÏÑú
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        if isMovingFromParent { // ‚Üê ÏßÑÏßú 'Îí§Î°ú'Î°ú ÎÇòÍ∞à ÎïåÎßå
            rasterizedForPop = true
            tableView.layer.shouldRasterize = true
            tableView.layer.rasterizationScale = UIScreen.main.scale
        }
    }

    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        if rasterizedForPop {
            rasterizedForPop = false
            tableView.layer.shouldRasterize = false
        }
    }
    
   //  MARK: - Î∞∞Í≤Ω Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï
        private func setupBackgroundImage() {
            // üîé Î∞∞Í≤Ω ÏóêÏÖã Î°úÎî© ÌôïÏù∏
                let name = "questlistviewbackground"
                print("[QuestList] BG '\(name)' loaded:", UIImage(named: name) != nil)
            
            // 1Ô∏è‚É£ Î∞∞Í≤ΩÏö© UIImageView ÏÉùÏÑ±
            let bgImageView = UIImageView(image: UIImage(named: "questlistviewbackground"))
            bgImageView.contentMode = .scaleAspectFill
            bgImageView.translatesAutoresizingMaskIntoConstraints = false

            view.insertSubview(bgImageView, at: 0) // üîß Í∞ÄÏû• Îí§Ïóê ÍπîÍ∏∞

            // 2Ô∏è‚É£ Auto LayoutÏúºÎ°ú view Ï†ÑÏ≤¥Ïóê ÍΩâ Ï±ÑÏö∞Í∏∞
            NSLayoutConstraint.activate([
                bgImageView.topAnchor.constraint(equalTo: view.topAnchor),
                bgImageView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
                bgImageView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
                bgImageView.trailingAnchor.constraint(equalTo: view.trailingAnchor)
            ])
        }
    
    // MARK: "ÌÉêÌóòÏùºÏßÄ ÌÉÄÏù¥ÌãÄ"
    private func setupNavBarTitle() {
        let titleLabel = UILabel()
        titleLabel.text = "ÌÉêÌóòÏùºÏßÄ"
        titleLabel.font = UIFont.systemFont(ofSize: 20, weight: .bold)
        titleLabel.textColor = .label
        navigationItem.titleView = titleLabel   // ‚Üê Ìï≠ÏÉÅ Í∞ÄÏö¥Îç∞ Î∞∞Ïπò
    }
    
    // MARK: - üîß Ïª§Ïä§ÌÖÄ Back Î≤ÑÌäº
       private func setupCustomBackButton() {
           // ÏóêÏÖãÏóê ic_nav_back(ÎòêÎäî ÏõêÌïòÎäî Ïù¥ÎØ∏ÏßÄ) Ï∂îÍ∞Ä. ÏóÜÏúºÎ©¥ SF Symbol ÎåÄÏ≤¥
           let image = UIImage(named: "backbutton") ?? UIImage(systemName: "chevron.left")

           let button = UIButton(type: .system)
           button.setImage(image, for: .normal)
           button.tintColor = .white                       // ÏïÑÏù¥ÏΩò ÏÉâ
           button.addTarget(self, action: #selector(didTapBack), for: .touchUpInside)

           // Î≤ÑÌäºÏùÑ BarButtonItemÏúºÎ°ú Ìè¨Ïû•
           let barItem = UIBarButtonItem(customView: button)
           navigationItem.leftBarButtonItem = barItem

           // ÌÅ¨Í∏∞ Ï†úÏïΩ(ÏïÑÏù¥ÏΩòÏù¥ ÎÑàÎ¨¥ Ïûë/ÌÅ¨Í≤å Î≥¥Ïùº Îïå)
           button.translatesAutoresizingMaskIntoConstraints = false
           NSLayoutConstraint.activate([
               button.widthAnchor.constraint(equalToConstant: 32),
               button.heightAnchor.constraint(equalToConstant: 32)
           ])

           // (ÏÑ†ÌÉù) Ïä§ÏôÄÏù¥ÌîÑ-Îí§Î°ú Ï†úÏä§Ï≤ò Ïú†ÏßÄ
           navigationController?.interactivePopGestureRecognizer?.delegate = nil
           navigationController?.interactivePopGestureRecognizer?.isEnabled = true
       }
    
    
    // MARK: - ÌÖåÏù¥Î∏î Î∑∞ ÏÑ∏ÌåÖ
        private func setupTableView() {
            view.addSubview(tableView)
            tableView.translatesAutoresizingMaskIntoConstraints = false
            NSLayoutConstraint.activate([
                tableView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
                tableView.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor),
                tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
                tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor)
            ])
            
            tableView.dataSource = self
            tableView.delegate   = self
            tableView.backgroundColor = .clear
            tableView.separatorStyle  = .none
            
            // Ïª§Ïä§ÌÖÄ ÏÖÄ Îì±Î°ù
            tableView.register(QuestCardView.self, forCellReuseIdentifier: QuestCardView.identifier)
        }
    
    @objc private func didTapBack() {
           navigationController?.popViewController(animated: true) // ‚Üê Îí§Î°úÍ∞ÄÍ∏∞ ÎèôÏûë
       }

    // MARK: - UITableViewDataSource
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return quests.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: QuestCardView.identifier, for: indexPath) as? QuestCardView else {
            return UITableViewCell()
        }
        let quest = quests[indexPath.row]
        cell.configure(with: quest)
        
        return cell
    }
    
    // MARK: - UITableViewDelegate
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 120
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let selectedQuest = quests[indexPath.row]
        let memoryVC = MemoryViewController(regionName: selectedQuest.spotName) // ‚úÖ ÏßÄÏó≠ Ïù¥Î¶Ñ Ï†ÑÎã¨
        tableView.deselectRow(at: indexPath, animated: true)
          navigationController?.pushViewController(memoryVC, animated: true)
    }
}
